name: Frontend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'ui/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'ui/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ui

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json

    - name: Install dependencies
      run: |
        npm ci
        # Install additional tools for code quality
        npm install -g eslint eslint-plugin-react eslint-plugin-jsx-a11y eslint-plugin-import complexity-report

    - name: Lint
      run: npm run lint

    - name: Type check
      run: npm run typecheck

    - name: Transpile TS to JS for complexity analysis
      run: npx tsc -p tsconfig.cr.json

    - name: Check code complexity
      run: |
        # Run complexity-report on emitted JS to ensure consistent parsing
        complexity-report --maxcyc 10 --maxfile 1000 --maxfunc 100 .cr-out || true
        # Fail if any function cyclomatic complexity > 15
        ! complexity-report --maxcyc 15 --maxfile 1000 --maxfunc 100 --format json .cr-out | grep -q '"cyclomatic":1[6-9]'
        ! complexity-report --maxcyc 15 --maxfile 1000 --maxfunc 100 --format json .cr-out | grep -q '"cyclomatic":[2-9][0-9]'

    - name: Run unit tests with coverage
      run: npm test -- --coverage --coverageThreshold='{"global":{"branches":70,"functions":80,"lines":80,"statements":80}}'

    - name: Build
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: ui/dist
        retention-days: 7

  e2e-tests:
    runs-on: ubuntu-latest
    needs: test-and-build

    defaults:
      run:
        working-directory: ui

    services:
      api:
        image: node:18
        ports:
          - 8000:8000
        options: --name api-service

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Set up Python for API
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ../requirements.txt

    - name: Start API server
      run: |
        cd ..
        python run_api.py &
        sleep 5  # Give the API server time to start

    - name: Run Cypress end-to-end tests
      run: |
        # Set the auth token for Cypress tests
        echo 'AUTH_TOKEN=test-token-for-authentication' > cypress.env.json
        npm run cypress:run

    - name: Upload Cypress screenshots on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots
        path: ui/cypress/screenshots
        retention-days: 7

  analyze:
    runs-on: ubuntu-latest
    needs: test-and-build

    defaults:
      run:
        working-directory: ui

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Analyze bundle size
      run: npm run build:analyze

    - name: Upload bundle analysis
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis
        path: ui/dist-analyze
        retention-days: 7

    - name: Run security audit
      run: npm audit --production

    - name: Check for outdated dependencies
      run: npm outdated || true
