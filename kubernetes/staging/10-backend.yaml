apiVersion: apps/v1
kind: Deployment
metadata:
  name: eternia-backend
  namespace: eternia-staging
  labels:
    app: eternia-backend
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: eternia-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: eternia-backend
    spec:
      containers:
      - name: backend
        image: ghcr.io/username/eternia/backend:latest  # This will be replaced by the CI/CD pipeline
        imagePullPolicy: Always
        command: ["docker-entrypoint.sh"]
        args: ["api"]
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ETERNIA_ENV
          value: "staging"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 15
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      imagePullSecrets:
      - name: github-registry
---
apiVersion: v1
kind: Service
metadata:
  name: eternia-backend
  namespace: eternia-staging
  labels:
    app: eternia-backend
    environment: staging
spec:
  selector:
    app: eternia-backend
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  type: ClusterIP