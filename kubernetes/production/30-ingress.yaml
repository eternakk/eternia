apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: eternia-ingress
  namespace: eternia-production
  labels:
    app: eternia
    environment: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # Use production issuer
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"  # Redirect non-www to www
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
spec:
  tls:
  - hosts:
    - eternia.example.com
    - www.eternia.example.com
    secretName: eternia-prod-tls
  rules:
  - host: eternia.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: eternia-backend
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: eternia-frontend
            port:
              number: 80
  - host: www.eternia.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: eternia-backend
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: eternia-frontend
            port:
              number: 80